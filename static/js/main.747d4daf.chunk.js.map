{"version":3,"sources":["axios.js","request.js","components/Banner.js","components/Nav.js","components/Row.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","API_KEY","requests","fetchtrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Banner","useState","movie","setMovie","useEffect","a","get","request","data","results","Math","floor","random","length","fetchData","str","n","className","style","backgroundSize","backgroundImage","backdrop_path","backgroundPosition","name","oringinal_name","title","overview","substr","Nav","show","handleShow","window","addEventListener","scrollY","removeEventListener","src","alt","Row","fetchUrl","isLarge","setmovie","trailerUrl","setTrailerUrl","map","movies","onClick","movieTrailer","then","url","urlParams","URLSearchParams","URL","search","catch","err","console","log","handleClick","poster_path","id","videoId","opts","height","weight","playerVars","autoplay","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.747d4daf.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://api.themoviedb.org/3',\r\n});\r\n\r\nexport default instance;\r\n","const API_KEY = '02684aad9559f0e07b9211530fb7f2c8';\r\n\r\nconst requests =  {\r\n    fetchtrending:`/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n    fetchNetflixOriginals:`/discover/tv?api_key=${API_KEY}&with_network=213`,\r\n    fetchTopRated:`/movie/top_rated?api_key=${API_KEY}&language=en=US`,\r\n    fetchActionMovies:`/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n    fetchComedyMovies:`/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n    fetchHorrorMovies:`/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n    fetchRomanceMovies:`/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n    fetchDocumentaries:`/discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n}\r\n\r\nexport default requests;","import { useEffect, useState } from \"react\"\r\nimport React from 'react'\r\nimport axios from \"../axios\"\r\nimport requests from \"../request\"\r\nimport './banner.css'\r\n\r\nexport default function Banner() {\r\n    \r\nconst [movie, setMovie] = useState([])\r\n\r\nuseEffect(() => {\r\n    async function fetchData() {\r\n        const request = await axios.get(requests.fetchNetflixOriginals)\r\n        setMovie(\r\n            request.data.results[Math.floor(Math.random() * request.data.results.length - 1)]    \r\n        )\r\n        return request;        \r\n    }\r\n    fetchData()\r\n}, [])\r\n// console.log(movie)\r\n\r\nconst truncate = (str, n) => {\r\n    return str?.length > n ? str.substr(0, n - 1) + \"...\" : str;\r\n};\r\n    return (\r\n        <header className='banner-head'\r\n            style={{\r\n                backgroundSize:'cover',\r\n                backgroundImage:`url('https://image.tmdb.org/t/p/original/${movie?.backdrop_path}')`,\r\n                backgroundPosition:'center center',\r\n            }}\r\n        >\r\n            <div className='banner-props'>\r\n                <h1 className='banner-title'>\r\n                    {movie?.name || movie?.oringinal_name || movie?.title }\r\n                </h1>\r\n                <div className='btns'>\r\n                    <button className='banner-btn'>Play</button>\r\n                    <button className='banner-btn'>My list</button>\r\n                </div>\r\n                <h2 className='description'>{truncate(movie?.overview, 150)}</h2>\r\n            </div>\r\n            <div className='darkbottom'></div>\r\n        </header>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport './banner.css'\r\n\r\n\r\n\r\nexport default function Nav() {\r\nconst [show, handleShow] = useState(false)    \r\n\r\nuseEffect(() => {\r\n    window.addEventListener('scroll', () => {\r\n        if (window.scrollY > 100) {\r\n            handleShow(true);\r\n        } else handleShow(false);\r\n    })\r\n    return () => {\r\n        window.removeEventListener('scroll')\r\n    }\r\n}, [])\r\n    return (\r\n        <div className={`nav-container ${show && 'navblack'}`}>\r\n\r\n            <img className='image' src='./netflix-big.png' alt='img'></img>\r\n            <img className='image1' src='./color-user.png' alt='img'></img>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport React from \"react\";\r\nimport axios from \"../axios\";\r\nimport \"./row.css\";\r\nimport YouTube from \"react-youtube\"\r\nimport movieTrailer from \"movie-trailer\";\r\n\r\nconst NURL = \"https://image.tmdb.org/t/p/original/\";\r\n\r\nexport default function Row({ title, fetchUrl, isLarge }) {\r\n  const [movie, setmovie] = useState([]);\r\n  const [trailerUrl, setTrailerUrl] = useState(\"\");\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const request = await axios.get(fetchUrl);\r\n      setmovie(request.data.results);\r\n      return request;\r\n    }\r\n    fetchData();\r\n  }, [fetchUrl]);\r\n\r\nconst opts = {\r\n  height: \"390\",\r\n  weight: \"100%\",\r\n  playerVars: {\r\n   autoplay: 1,\r\n  },\r\n}\r\n\r\nconst handleClick = (movies) => {\r\n  if (trailerUrl) {\r\n    setTrailerUrl(\"\");\r\n  }else{\r\n  movieTrailer(movies?.name || \"\")\r\n    .then((url) => {\r\n      const urlParams = new URLSearchParams(new URL(url).search);\r\n      setTrailerUrl(urlParams.get(\"v\"));\r\n       })\r\n    .catch((err) => console.log(err));\r\n  }\r\n};\r\n\r\n  // console.log(movie);\r\n  return (\r\n    <div className=\"row\">\r\n      <h2 className='subtitle'>{title}</h2>\r\n      <div className=\"img-container\">\r\n        {movie.map((movies) => (\r\n          <img\r\n          key={movies.id}\r\n          onClick={() => handleClick(movies)}\r\n            className={`row-img ${isLarge && 'row-largeimg'}`}\r\n            src={`${NURL}${isLarge ? movies.poster_path : movies.backdrop_path}`}\r\n            alt={movies.name}\r\n          ></img>\r\n        ))}\r\n      </div>\r\n      {trailerUrl && <YouTube videoId={trailerUrl} opts={opts} />}\r\n    </div>\r\n  );\r\n}\r\n","import './App.css';\nimport Banner from './components/Banner';\nimport Nav from './components/Nav';\nimport Row from './components/Row';\nimport requests from './request';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Nav />\n      <Banner />\n      <Row title='NETFLIX ORIGINAL' isLarge fetchUrl={requests.fetchNetflixOriginals}/>\n      <Row title='Trending Now' fetchUrl={requests.fetchtrending}/>\n      <Row title='Top Rated' fetchUrl={requests.fetchTopRated}/>\n      <Row title='Romance Moives' fetchUrl={requests.fetchRomanceMovies}/>\n      <Row title='Horror Movies' fetchUrl={requests.fetchHorrorMovies}/>\n      <Row title='Documentaries' fetchUrl={requests.fetchDocumentaries}/>\n      <Row title='Comedy Movies' fetchUrl={requests.fetchComedyMovies}/>\n      <Row title='Action Movies' fetchUrl={requests.fetchActionMovies}/>\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}